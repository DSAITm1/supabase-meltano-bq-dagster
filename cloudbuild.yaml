# Cloud Build configuration for automated CI/CD
steps:
  # Step 1: Build the main pipeline container
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/supabase-bq-pipeline:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/supabase-bq-pipeline:latest',
      '.'
    ]

  # Step 2: Build Meltano ELT container
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-f', 'Dockerfile.meltano',
      '-t', 'gcr.io/$PROJECT_ID/meltano-elt:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/meltano-elt:latest',
      '.'
    ]

  # Step 3: Build dbt transformations container
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build', 
      '-f', 'Dockerfile.dbt',
      '-t', 'gcr.io/$PROJECT_ID/dbt-transforms:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/dbt-transforms:latest',
      '.'
    ]

  # Step 4: Push all images to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/supabase-bq-pipeline']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/meltano-elt']

  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '--all-tags', 'gcr.io/$PROJECT_ID/dbt-transforms']

  # Step 5: Deploy to Cloud Run (production branch only)
  - name: 'gcr.io/cloud-builders/gcloud'
    args: [
      'run', 'deploy', 'supabase-bq-pipeline',
      '--image', 'gcr.io/$PROJECT_ID/supabase-bq-pipeline:$BUILD_ID',
      '--region', 'us-central1',
      '--platform', 'managed',
      '--memory', '2Gi',
      '--cpu', '1',
      '--timeout', '3600',
      '--allow-unauthenticated',
      '--set-env-vars', 'BQ_PROJECT_ID=$PROJECT_ID',
      '--set-secrets', 'SUPABASE_URL=supabase-url:latest,SUPABASE_DB_PASSWORD=supabase-password:latest,SENDGRID_API_KEY=sendgrid-api-key:latest'
    ]

# Configuration
options:
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 100
  logging: CLOUD_LOGGING_ONLY

# Build timeout (important for large conda environments)
timeout: 1800s

# Substitutions for flexible builds
substitutions:
  _DEPLOY_REGION: 'us-central1'
  _SERVICE_NAME: 'supabase-bq-pipeline'

# Images to be pushed to Container Registry
images:
  - 'gcr.io/$PROJECT_ID/supabase-bq-pipeline:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/supabase-bq-pipeline:latest'
  - 'gcr.io/$PROJECT_ID/meltano-elt:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/meltano-elt:latest'
  - 'gcr.io/$PROJECT_ID/dbt-transforms:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/dbt-transforms:latest'
